package com.seismic.crm.model;

// Generated Dec 16, 2013 4:44:14 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * ContactGroup generated by hbm2java
 */
@Entity
@Table(name = "ContactGroup", schema = "dbo", catalog = "Seismic_Crm_Dev")
public class ContactGroup implements java.io.Serializable {

	private Long contactGroupId;
//	private ListValues listValues;
	private Contact contact;
	private String contactGroupName;
	private String contactGroupDesc;
	private String contactGroupParentId;
	private String contactGroupParentName;
	private String contactGroupCategory;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private String modifiedAt;
	private String remarks;
	private Set contactGroupMembers = new HashSet(0);

	public ContactGroup() {
	}

	public ContactGroup(Long contactGroupId) {
		this.contactGroupId = contactGroupId;
	}

	public ContactGroup(Long contactGroupId, ListValues listValues,
			Contact contact, String contactGroupName, String contactGroupDesc,
			String contactGroupParentId, String contactGroupParentName,
			String contactGroupCategory, Boolean isActive, String createdBy,
			Date createdAt, String modifiedBy, String modifiedAt,
			String remarks, Set contactGroupMembers) {
		this.contactGroupId = contactGroupId;
//		this.listValues = listValues;
		this.contact = contact;
		this.contactGroupName = contactGroupName;
		this.contactGroupDesc = contactGroupDesc;
		this.contactGroupParentId = contactGroupParentId;
		this.contactGroupParentName = contactGroupParentName;
		this.contactGroupCategory = contactGroupCategory;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
		this.contactGroupMembers = contactGroupMembers;
	}

	@Id
	@Column(name = "ContactGroupID", unique = true, nullable = false)
	public Long getContactGroupId() {
		return this.contactGroupId;
	}

	public void setContactGroupId(Long contactGroupId) {
		this.contactGroupId = contactGroupId;
	}

	/*@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ContactGroupTypeID")
	public ListValues getListValues() {
		return this.listValues;
	}

	public void setListValues(ListValues listValues) {
		this.listValues = listValues;
	}*/
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ContactID")
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@Column(name = "ContactGroupName")
	public String getContactGroupName() {
		return this.contactGroupName;
	}

	public void setContactGroupName(String contactGroupName) {
		this.contactGroupName = contactGroupName;
	}

	@Column(name = "ContactGroupDesc")
	public String getContactGroupDesc() {
		return this.contactGroupDesc;
	}

	public void setContactGroupDesc(String contactGroupDesc) {
		this.contactGroupDesc = contactGroupDesc;
	}

	@Column(name = "ContactGroupParentID")
	public String getContactGroupParentId() {
		return this.contactGroupParentId;
	}

	public void setContactGroupParentId(String contactGroupParentId) {
		this.contactGroupParentId = contactGroupParentId;
	}

	@Column(name = "ContactGroupParentName")
	public String getContactGroupParentName() {
		return this.contactGroupParentName;
	}

	public void setContactGroupParentName(String contactGroupParentName) {
		this.contactGroupParentName = contactGroupParentName;
	}

	@Column(name = "ContactGroupCategory")
	public String getContactGroupCategory() {
		return this.contactGroupCategory;
	}

	public void setContactGroupCategory(String contactGroupCategory) {
		this.contactGroupCategory = contactGroupCategory;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Column(name = "ModifiedAt")
	public String getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(String modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "contactGroup")
	public Set getContactGroupMembers() {
		return this.contactGroupMembers;
	}

	public void setContactGroupMembers(Set contactGroupMembers) {
		this.contactGroupMembers = contactGroupMembers;
	}
*/
}
