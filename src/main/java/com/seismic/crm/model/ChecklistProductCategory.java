package com.seismic.crm.model;

// Generated Jan 13, 2014 12:05:49 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ChecklistProductCategory generated by hbm2java
 */
@Entity
@Table(name = "ChecklistProductCategory", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class ChecklistProductCategory implements java.io.Serializable {

	private long checklistProductCategoryId;
	private ProductCategory productCategory;
	private Integer checklistProductCategorySeq;
	private Boolean isActive;
	private String createdby;
	private Date createdAt;
	private String modifiedBy;
	private Date modifiedAt;
	private String remarks;
	private Set<ChecklistResponse> checklistResponses = new HashSet(0);
//	private Set checklistMaps = new HashSet(0);
	private Set<ChecklistDocument> checklistDocuments = new HashSet(0);

	public ChecklistProductCategory() {
	}

	public ChecklistProductCategory(long checklistProductCategoryId) {
		this.checklistProductCategoryId = checklistProductCategoryId;
	}

	public ChecklistProductCategory(long checklistProductCategoryId,
			ProductCategory productCategory, Integer checklistProductSeq,
			Boolean isActive, String createdby, Date createdAt,
			String modifiedBy, Date modifiedAt, String remarks,
			Set checklistResponses, Set checklistMaps) {
		this.checklistProductCategoryId = checklistProductCategoryId;
		this.productCategory = productCategory;
		this.checklistProductCategorySeq = checklistProductSeq;
		this.isActive = isActive;
		this.createdby = createdby;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
		this.checklistResponses = checklistResponses;
//		this.checklistMaps = checklistMaps;
	}

	@Id
	@GeneratedValue
	@Column(name = "ChecklistProductCategoryID", unique = true, nullable = false)
	public long getChecklistProductCategoryId() {
		return this.checklistProductCategoryId;
	}

	public void setChecklistProductCategoryId(long checklistProductCategoryId) {
		this.checklistProductCategoryId = checklistProductCategoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProductCategoryID")
	public ProductCategory getProductCategory() {
		return this.productCategory;
	}

	public void setProductCategory(ProductCategory productCategory) {
		this.productCategory = productCategory;
	}

	@Column(name = "ChecklistProductCategorySeq")
	public Integer getChecklistProductCategorySeq() {
		return this.checklistProductCategorySeq;
	}

	public void setChecklistProductCategorySeq(Integer checklistProductSeq) {
		this.checklistProductCategorySeq = checklistProductSeq;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "Createdby")
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedAt", length = 23)
	public Date getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(Date modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "checklistProductCategory")
	public Set<ChecklistResponse> getChecklistResponses() {
		return this.checklistResponses;
	}

	public void setChecklistResponses(Set<ChecklistResponse> checklistResponses) {
		this.checklistResponses = checklistResponses;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "checklistProductCategories")
	public Set<ChecklistDocument> getChecklistDocuments() {
		return checklistDocuments;
	}

	public void setChecklistDocuments(Set<ChecklistDocument> checklistDocuments) {
		this.checklistDocuments = checklistDocuments;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime
				* result
				+ (int) (checklistProductCategoryId ^ (checklistProductCategoryId >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ChecklistProductCategory other = (ChecklistProductCategory) obj;
		if (checklistProductCategoryId != other.checklistProductCategoryId)
			return false;
		return true;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "checklistProductCategory")
//	public Set getChecklistMaps() {
//		return this.checklistMaps;
//	}
//
//	public void setChecklistMaps(Set checklistMaps) {
//		this.checklistMaps = checklistMaps;
//	}

}
