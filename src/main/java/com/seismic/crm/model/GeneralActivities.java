package com.seismic.crm.model;

// Generated 16 Jan, 2014 4:07:46 PM by Hibernate Tools 4.0.0

import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * GeneralActivities generated by hbm2java
 */
@Entity
@Table(name = "GeneralActivities", schema = "dbo", catalog = "Seismic_Crm_Dev")
public class GeneralActivities implements java.io.Serializable {

	private long generalActivityId;
	private ListValues listValuesByGeneralActivityType;
	private ListValues listValuesByGeneralActivityEntityType;
	private String entityNumber;
	private Long generalActivityAssignedTo;
	private Date generalActivityDate;
	private String generalActivityDescription;
//	private Date generalActivityMinutes;
	private String generalActivityAttachment;
	private String generalActivitySubject;
	private Date generalActivityStartDate;
	private String generalActivityStartTime;
	private Date generalActivityEndDate;
	private String generalActivityEndTime;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private String modifiedAt;
	private String remarks;
	private String generalActivityEntityName;
	private Contact contact;
	private Set<GeneralActivityTasks> generalActivityTaskses = new HashSet<GeneralActivityTasks>(0);

	public GeneralActivities() {
	}

	public GeneralActivities(long generalActivityId) {
		this.generalActivityId = generalActivityId;
	}

	public GeneralActivities(long generalActivityId,String generalActivityEntityName,Contact contact,
			ListValues listValuesByGeneralActivityType,
			ListValues listValuesByGeneralActivityEntityType,
			String entityNumber, Long generalActivityAssignedTo,
			Date generalActivityDate, String generalActivityDescription,
			String generalActivityAttachment,
			String generalActivitySubject, Date generalActivityStartDate,
			String generalActivityStartTime, Date generalActivityEndDate,
			String generalActivityEndTime, Boolean isActive, String createdBy,
			Date createdAt, String modifiedBy, String modifiedAt,
			String remarks, Set<GeneralActivityTasks> generalActivityTaskses) {
		this.generalActivityId = generalActivityId;
		this.listValuesByGeneralActivityType = listValuesByGeneralActivityType;
		this.listValuesByGeneralActivityEntityType = listValuesByGeneralActivityEntityType;
		this.entityNumber = entityNumber;
		this.generalActivityAssignedTo = generalActivityAssignedTo;
		this.generalActivityDate = generalActivityDate;
		this.generalActivityDescription = generalActivityDescription;
//		this.generalActivityMinutes = generalActivityMinutes;
		this.generalActivityAttachment = generalActivityAttachment;
		this.generalActivitySubject = generalActivitySubject;
		this.generalActivityStartDate = generalActivityStartDate;
		this.generalActivityStartTime = generalActivityStartTime;
		this.generalActivityEndDate = generalActivityEndDate;
		this.generalActivityEndTime = generalActivityEndTime;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
		this.generalActivityTaskses = generalActivityTaskses;
		this.generalActivityEntityName = generalActivityEntityName;
		this.contact = contact;
	}

	@Id
	@GeneratedValue
	@Column(name = "GeneralActivityID", unique = true, nullable = false)
	public long getGeneralActivityId() {
		return this.generalActivityId;
	}

	public void setGeneralActivityId(long generalActivityId) {
		this.generalActivityId = generalActivityId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "GeneralActivityType")
	public ListValues getListValuesByGeneralActivityType() {
		return this.listValuesByGeneralActivityType;
	}

	public void setListValuesByGeneralActivityType(
			ListValues listValuesByGeneralActivityType) {
		this.listValuesByGeneralActivityType = listValuesByGeneralActivityType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "GeneralActivityEntityType")
	public ListValues getListValuesByGeneralActivityEntityType() {
		return this.listValuesByGeneralActivityEntityType;
	}

	@Column(name = "GeneralActivityEntityName")
	public String getGeneralActivityEntityName() {
		return this.generalActivityEntityName;
	}

	public void setGeneralActivityEntityName(String generalActivityEntityName) {
		this.generalActivityEntityName = generalActivityEntityName;
	}
	
	public void setListValuesByGeneralActivityEntityType(
			ListValues listValuesByGeneralActivityEntityType) {
		this.listValuesByGeneralActivityEntityType = listValuesByGeneralActivityEntityType;
	}

	@Column(name = "EntityNumber")
	public String getEntityNumber() {
		return this.entityNumber;
	}

	public void setEntityNumber(String entityNumber) {
		this.entityNumber = entityNumber;
	}

//	@Column(name = "GeneralActivityAssignedTo")
//	public Long getGeneralActivityAssignedTo() {
//		return this.generalActivityAssignedTo;
//	}

//	public void setGeneralActivityAssignedTo(Long generalActivityAssignedTo) {
//		this.generalActivityAssignedTo = generalActivityAssignedTo;
//	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "GeneralActivityDate", length = 23)
	public Date getGeneralActivityDate() {
		return this.generalActivityDate;
	}

	public void setGeneralActivityDate(Date generalActivityDate) {
		this.generalActivityDate = generalActivityDate;
	}

	@Column(name = "GeneralActivityDescription")
	public String getGeneralActivityDescription() {
		return this.generalActivityDescription;
	}

	public void setGeneralActivityDescription(String generalActivityDescription) {
		this.generalActivityDescription = generalActivityDescription;
	}

	/*@Temporal(TemporalType.TIME)
	@Column(name = "GeneralActivityMinutes", length = 16)
	public Date getGeneralActivityMinutes() {
		return this.generalActivityMinutes;
	}

	public void setGeneralActivityMinutes(Date generalActivityMinutes) {
		this.generalActivityMinutes = generalActivityMinutes;
	}*/

	@Column(name = "GeneralActivityAttachment")
	public String getGeneralActivityAttachment() {
		return this.generalActivityAttachment;
	}

	public void setGeneralActivityAttachment(String generalActivityAttachment) {
		this.generalActivityAttachment = generalActivityAttachment;
	}

	@Column(name = "GeneralActivitySubject")
	public String getGeneralActivitySubject() {
		return this.generalActivitySubject;
	}

	public void setGeneralActivitySubject(String generalActivitySubject) {
		this.generalActivitySubject = generalActivitySubject;
	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "GeneralActivityStartDate", length = 23)
	public Date getGeneralActivityStartDate() {
		return this.generalActivityStartDate;
	}

	public void setGeneralActivityStartDate(Date generalActivityStartDate) {
		this.generalActivityStartDate = generalActivityStartDate;
	}

	@Column(name = "GeneralActivityStartTime")
	public String getGeneralActivityStartTime() {
		return this.generalActivityStartTime;
	}

	public void setGeneralActivityStartTime(String generalActivityStartTime) {
		this.generalActivityStartTime = generalActivityStartTime;
	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "GeneralActivityEndDate", length = 23)
	public Date getGeneralActivityEndDate() {
		return this.generalActivityEndDate;
	}

	public void setGeneralActivityEndDate(Date generalActivityEndDate) {
		this.generalActivityEndDate = generalActivityEndDate;
	}

	@Column(name = "GeneralActivityEndTime")
	public String getGeneralActivityEndTime() {
		return this.generalActivityEndTime;
	}

	public void setGeneralActivityEndTime(String generalActivityEndTime) {
		this.generalActivityEndTime = generalActivityEndTime;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

//	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Column(name = "ModifiedAt")
	public String getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(String modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "generalActivities")
	public Set<GeneralActivityTasks> getGeneralActivityTaskses() {
		return this.generalActivityTaskses;
	}

	public void setGeneralActivityTaskses(Set<GeneralActivityTasks> generalActivityTaskses) {
		this.generalActivityTaskses = generalActivityTaskses;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name="GeneralActivityAssignedTo")
	public Contact getContact() {
		return contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

}
