package com.seismic.crm.model;

// Generated Nov 13, 2013 3:55:26 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PurchaseOrder generated by hbm2java
 */
@Entity
@Table(name = "PurchaseOrder", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class PurchaseOrder implements java.io.Serializable {

	private long purchaseOrderId;
//	private Contract contract;
	private Long accountId;
	private String purchaseOrderNumber;
	private Date purchaseOrderDate;
	private String posalesOrderNumber;
	private String purchaseOrderStatus;
	private String purchaseOrderPriority;
	private String purchaseOrderSalesRep;
	private String broker;
	private Date purchaseOrderValidFrom;
	private Date purchaseOrderExpiresOn;
	private Date purchaseOrderCancleOn;
	private Date purchaseOrderClosedOn;
	private String purchaseOrderSupplierName;
	private Date purchaseOrderExpectedDeliveryDate;
	private String purchaseOrderShippingMethod;
	private String purchaseOrderShippingInstructions;
	private String purchaseOrderCarrier;
	private String purchaseOrderTrackingNumber;
	private String purchaseOrderPaymentTerms;
	private BigDecimal purchaseOrderCurrency;
	private String purchaseOrderFreightTerms;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private String modifiedAt;
	private String remarks;
//	private Set salesOrders = new HashSet(0);
//	private Set purchaseOrderDetails = new HashSet(0);
//	private Set inventoryReceipts = new HashSet(0);

	public PurchaseOrder() {
	}

	public PurchaseOrder(long purchaseOrderId) {
		this.purchaseOrderId = purchaseOrderId;
	}

//	public PurchaseOrder(long purchaseOrderId, /*Contract contract,*/
//			Long accountId, String purchaseOrderNumber, Date purchaseOrderDate,
//			String posalesOrderNumber, String purchaseOrderStatus,
//			String purchaseOrderPriority, String purchaseOrderSalesRep,
//			String broker, Date purchaseOrderValidFrom,
//			Date purchaseOrderExpiresOn, Date purchaseOrderCancleOn,
//			Date purchaseOrderClosedOn, String purchaseOrderSupplierName,
//			Date purchaseOrderExpectedDeliveryDate,
//			String purchaseOrderShippingMethod,
//			String purchaseOrderShippingInstructions,
//			String purchaseOrderCarrier, String purchaseOrderTrackingNumber,
//			String purchaseOrderPaymentTerms, BigDecimal purchaseOrderCurrency,
//			String purchaseOrderFreightTerms, Boolean isActive,
//			String createdBy, Date createdAt, String modifiedBy,
//			String modifiedAt, String remarks, Set salesOrders,
//			Set purchaseOrderDetails, Set inventoryReceipts) {
//		this.purchaseOrderId = purchaseOrderId;
////		this.contract = contract;
//		this.accountId = accountId;
//		this.purchaseOrderNumber = purchaseOrderNumber;
//		this.purchaseOrderDate = purchaseOrderDate;
//		this.posalesOrderNumber = posalesOrderNumber;
//		this.purchaseOrderStatus = purchaseOrderStatus;
//		this.purchaseOrderPriority = purchaseOrderPriority;
//		this.purchaseOrderSalesRep = purchaseOrderSalesRep;
//		this.broker = broker;
//		this.purchaseOrderValidFrom = purchaseOrderValidFrom;
//		this.purchaseOrderExpiresOn = purchaseOrderExpiresOn;
//		this.purchaseOrderCancleOn = purchaseOrderCancleOn;
//		this.purchaseOrderClosedOn = purchaseOrderClosedOn;
//		this.purchaseOrderSupplierName = purchaseOrderSupplierName;
//		this.purchaseOrderExpectedDeliveryDate = purchaseOrderExpectedDeliveryDate;
//		this.purchaseOrderShippingMethod = purchaseOrderShippingMethod;
//		this.purchaseOrderShippingInstructions = purchaseOrderShippingInstructions;
//		this.purchaseOrderCarrier = purchaseOrderCarrier;
//		this.purchaseOrderTrackingNumber = purchaseOrderTrackingNumber;
//		this.purchaseOrderPaymentTerms = purchaseOrderPaymentTerms;
//		this.purchaseOrderCurrency = purchaseOrderCurrency;
//		this.purchaseOrderFreightTerms = purchaseOrderFreightTerms;
//		this.isActive = isActive;
//		this.createdBy = createdBy;
//		this.createdAt = createdAt;
//		this.modifiedBy = modifiedBy;
//		this.modifiedAt = modifiedAt;
//		this.remarks = remarks;
//		this.salesOrders = salesOrders;
//		this.purchaseOrderDetails = purchaseOrderDetails;
//		this.inventoryReceipts = inventoryReceipts;
//	}

	@Id
	@Column(name = "PurchaseOrderID", unique = true, nullable = false)
	public long getPurchaseOrderId() {
		return this.purchaseOrderId;
	}

	public void setPurchaseOrderId(long purchaseOrderId) {
		this.purchaseOrderId = purchaseOrderId;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "ContractID")
//	public Contract getContract() {
//		return this.contract;
//	}
//
//	public void setContract(Contract contract) {
//		this.contract = contract;
//	}

	@Column(name = "AccountID")
	public Long getAccountId() {
		return this.accountId;
	}

	public void setAccountId(Long accountId) {
		this.accountId = accountId;
	}

	@Column(name = "PurchaseOrderNumber")
	public String getPurchaseOrderNumber() {
		return this.purchaseOrderNumber;
	}

	public void setPurchaseOrderNumber(String purchaseOrderNumber) {
		this.purchaseOrderNumber = purchaseOrderNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PurchaseOrderDate", length = 23)
	public Date getPurchaseOrderDate() {
		return this.purchaseOrderDate;
	}

	public void setPurchaseOrderDate(Date purchaseOrderDate) {
		this.purchaseOrderDate = purchaseOrderDate;
	}

	@Column(name = "POSalesOrderNumber")
	public String getPosalesOrderNumber() {
		return this.posalesOrderNumber;
	}

	public void setPosalesOrderNumber(String posalesOrderNumber) {
		this.posalesOrderNumber = posalesOrderNumber;
	}

	@Column(name = "PurchaseOrderStatus")
	public String getPurchaseOrderStatus() {
		return this.purchaseOrderStatus;
	}

	public void setPurchaseOrderStatus(String purchaseOrderStatus) {
		this.purchaseOrderStatus = purchaseOrderStatus;
	}

	@Column(name = "PurchaseOrderPriority")
	public String getPurchaseOrderPriority() {
		return this.purchaseOrderPriority;
	}

	public void setPurchaseOrderPriority(String purchaseOrderPriority) {
		this.purchaseOrderPriority = purchaseOrderPriority;
	}

	@Column(name = "PurchaseOrderSalesRep")
	public String getPurchaseOrderSalesRep() {
		return this.purchaseOrderSalesRep;
	}

	public void setPurchaseOrderSalesRep(String purchaseOrderSalesRep) {
		this.purchaseOrderSalesRep = purchaseOrderSalesRep;
	}

	@Column(name = "Broker")
	public String getBroker() {
		return this.broker;
	}

	public void setBroker(String broker) {
		this.broker = broker;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PurchaseOrderValidFrom", length = 23)
	public Date getPurchaseOrderValidFrom() {
		return this.purchaseOrderValidFrom;
	}

	public void setPurchaseOrderValidFrom(Date purchaseOrderValidFrom) {
		this.purchaseOrderValidFrom = purchaseOrderValidFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PurchaseOrderExpiresOn", length = 23)
	public Date getPurchaseOrderExpiresOn() {
		return this.purchaseOrderExpiresOn;
	}

	public void setPurchaseOrderExpiresOn(Date purchaseOrderExpiresOn) {
		this.purchaseOrderExpiresOn = purchaseOrderExpiresOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PurchaseOrderCancleOn", length = 23)
	public Date getPurchaseOrderCancleOn() {
		return this.purchaseOrderCancleOn;
	}

	public void setPurchaseOrderCancleOn(Date purchaseOrderCancleOn) {
		this.purchaseOrderCancleOn = purchaseOrderCancleOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PurchaseOrderClosedOn", length = 23)
	public Date getPurchaseOrderClosedOn() {
		return this.purchaseOrderClosedOn;
	}

	public void setPurchaseOrderClosedOn(Date purchaseOrderClosedOn) {
		this.purchaseOrderClosedOn = purchaseOrderClosedOn;
	}

	@Column(name = "PurchaseOrderSupplierName")
	public String getPurchaseOrderSupplierName() {
		return this.purchaseOrderSupplierName;
	}

	public void setPurchaseOrderSupplierName(String purchaseOrderSupplierName) {
		this.purchaseOrderSupplierName = purchaseOrderSupplierName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PurchaseOrderExpectedDeliveryDate", length = 23)
	public Date getPurchaseOrderExpectedDeliveryDate() {
		return this.purchaseOrderExpectedDeliveryDate;
	}

	public void setPurchaseOrderExpectedDeliveryDate(
			Date purchaseOrderExpectedDeliveryDate) {
		this.purchaseOrderExpectedDeliveryDate = purchaseOrderExpectedDeliveryDate;
	}

	@Column(name = "PurchaseOrderShippingMethod")
	public String getPurchaseOrderShippingMethod() {
		return this.purchaseOrderShippingMethod;
	}

	public void setPurchaseOrderShippingMethod(
			String purchaseOrderShippingMethod) {
		this.purchaseOrderShippingMethod = purchaseOrderShippingMethod;
	}

	@Column(name = "PurchaseOrderShippingInstructions")
	public String getPurchaseOrderShippingInstructions() {
		return this.purchaseOrderShippingInstructions;
	}

	public void setPurchaseOrderShippingInstructions(
			String purchaseOrderShippingInstructions) {
		this.purchaseOrderShippingInstructions = purchaseOrderShippingInstructions;
	}

	@Column(name = "PurchaseOrderCarrier")
	public String getPurchaseOrderCarrier() {
		return this.purchaseOrderCarrier;
	}

	public void setPurchaseOrderCarrier(String purchaseOrderCarrier) {
		this.purchaseOrderCarrier = purchaseOrderCarrier;
	}

	@Column(name = "PurchaseOrderTrackingNumber")
	public String getPurchaseOrderTrackingNumber() {
		return this.purchaseOrderTrackingNumber;
	}

	public void setPurchaseOrderTrackingNumber(
			String purchaseOrderTrackingNumber) {
		this.purchaseOrderTrackingNumber = purchaseOrderTrackingNumber;
	}

	@Column(name = "PurchaseOrderPaymentTerms")
	public String getPurchaseOrderPaymentTerms() {
		return this.purchaseOrderPaymentTerms;
	}

	public void setPurchaseOrderPaymentTerms(String purchaseOrderPaymentTerms) {
		this.purchaseOrderPaymentTerms = purchaseOrderPaymentTerms;
	}

	@Column(name = "PurchaseOrderCurrency", scale = 4)
	public BigDecimal getPurchaseOrderCurrency() {
		return this.purchaseOrderCurrency;
	}

	public void setPurchaseOrderCurrency(BigDecimal purchaseOrderCurrency) {
		this.purchaseOrderCurrency = purchaseOrderCurrency;
	}

	@Column(name = "PurchaseOrderFreightTerms")
	public String getPurchaseOrderFreightTerms() {
		return this.purchaseOrderFreightTerms;
	}

	public void setPurchaseOrderFreightTerms(String purchaseOrderFreightTerms) {
		this.purchaseOrderFreightTerms = purchaseOrderFreightTerms;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Column(name = "ModifiedAt")
	public String getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(String modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrder")
//	public Set getSalesOrders() {
//		return this.salesOrders;
//	}
//
//	public void setSalesOrders(Set salesOrders) {
//		this.salesOrders = salesOrders;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrder")
//	public Set getPurchaseOrderDetails() {
//		return this.purchaseOrderDetails;
//	}
//
//	public void setPurchaseOrderDetails(Set purchaseOrderDetails) {
//		this.purchaseOrderDetails = purchaseOrderDetails;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrder")
//	public Set getInventoryReceipts() {
//		return this.inventoryReceipts;
//	}
//
//	public void setInventoryReceipts(Set inventoryReceipts) {
//		this.inventoryReceipts = inventoryReceipts;
//	}

}
