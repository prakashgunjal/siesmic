package com.seismic.crm.model;

// Generated Dec 20, 2013 3:28:29 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;


/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "Address", schema = "dbo", catalog = "Seismic_Crm_Dev")
public class Address implements java.io.Serializable {

	private long addressId;
	private Contact contact;
	private ListValues listValuesByEntityTypeId;
	private ListValues listValuesByAddressTypeId;
	private String entityNumber;
	private String addressContactPerson;
	private String address1;
	private String address2;
	private String address3;
	private String address4;
	private String city;
	private String state;
	private String country;
	private String postalCode;
	private String phone;
	private String mobile;
	private String email;
	private String fax;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private Date modifiedAt;
	private String remarks;
	//private Set<Location> locations = new HashSet<Location>(0);
	//private Set<Contact> contacts = new HashSet<Contact>(0);

	public Address() {
	}

	public Address(long addressId) {
		this.addressId = addressId;
	}

	public Address(long addressId, Contact contact,
			ListValues listValuesByEntityTypeId,
			ListValues listValuesByAddressTypeId, String entityNumber,
			String addressContactPerson, String address1, String address2,
			String address3, String address4, String city, String state,
			String country, String postalCode, String phone, String mobile,
			String email, String fax, Boolean isActive, String createdBy,
			Date createdAt, String modifiedBy, Date modifiedAt, String remarks,
			//Set<Location> locations,
			Set<Contact> contacts) {
		this.addressId = addressId;
		this.contact = contact;
		this.listValuesByEntityTypeId = listValuesByEntityTypeId;
		this.listValuesByAddressTypeId = listValuesByAddressTypeId;
		this.entityNumber = entityNumber;
		this.addressContactPerson = addressContactPerson;
		this.address1 = address1;
		this.address2 = address2;
		this.address3 = address3;
		this.address4 = address4;
		this.city = city;
		this.state = state;
		this.country = country;
		this.postalCode = postalCode;
		this.phone = phone;
		this.mobile = mobile;
		this.email = email;
		this.fax = fax;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
	//	this.locations = locations;
	//	this.contacts = contacts;
	}

	@Id
	@GeneratedValue
	@Column(name = "AddressID", unique = true, nullable = false)
	public long getAddressId() {
		return this.addressId;
	}

	public void setAddressId(long addressId) {
		this.addressId = addressId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EntityID")
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "EntityTypeID")
	public ListValues getListValuesByEntityTypeId() {
		return this.listValuesByEntityTypeId;
	}

	public void setListValuesByEntityTypeId(ListValues listValuesByEntityTypeId) {
		this.listValuesByEntityTypeId = listValuesByEntityTypeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "AddressTypeID")
	public ListValues getListValuesByAddressTypeId() {
		return this.listValuesByAddressTypeId;
	}

	public void setListValuesByAddressTypeId(
			ListValues listValuesByAddressTypeId) {
		this.listValuesByAddressTypeId = listValuesByAddressTypeId;
	}

	@Column(name = "EntityNumber")
	public String getEntityNumber() {
		return this.entityNumber;
	}

	public void setEntityNumber(String entityNumber) {
		this.entityNumber = entityNumber;
	}

	@Column(name = "AddressContactPerson")
	public String getAddressContactPerson() {
		return this.addressContactPerson;
	}

	public void setAddressContactPerson(String addressContactPerson) {
		this.addressContactPerson = addressContactPerson;
	}

	@Column(name = "Address1")
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "Address2")
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "Address3")
	public String getAddress3() {
		return this.address3;
	}

	public void setAddress3(String address3) {
		this.address3 = address3;
	}

	@Column(name = "Address4")
	public String getAddress4() {
		return this.address4;
	}

	public void setAddress4(String address4) {
		this.address4 = address4;
	}

	@Column(name = "City")
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "State")
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "Country")
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "PostalCode")
	public String getPostalCode() {
		return this.postalCode;
	}

	public void setPostalCode(String postalCode) {
		this.postalCode = postalCode;
	}

	@Column(name = "Phone")
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "Mobile")
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "Email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Fax")
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedAt", length = 23)
	public Date getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(Date modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	    
    /*
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
	public Set<Location> getLocations() {
		return this.locations;
	}
	public void setLocations(Set<Location> locations) {
		this.locations = locations;
	} */ 
   /*
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
	public Set<Contact> getContacts() {
		return this.contacts;
	}

	public void setContacts(Set<Contact> contacts) {
		this.contacts = contacts;
	} */


}
