package com.seismic.crm.model;

// Generated Nov 16, 2013 8:13:52 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * SalesOrderProductDetail generated by hbm2java
 */
@Entity
@Table(name = "SalesOrderProductDetail", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class SalesOrderProductDetail implements java.io.Serializable {

	private long salesOrderProductDetailId;
	private Product product;
	private ProductType productType;
	private SalesOrder salesOrder;
	private ListValues lvsoChargeType;
	private ListValues lvsoLineItem;
	private SupplierProduct supplierProduct;
	private SpecificationMap specificationMap;
	private ProductSubCategory productSubCategory;
	private ProductSubType productSubType;
	private ProductCategory productCategory;
	private ListValues listValuesBySalesOrderFromId;
	private String salesOrderName;
	private Product profServProduct;
	private BigDecimal salesOrderProductRate;
	private BigDecimal salesOrderProductDiscount;
	private BigDecimal salesOrderProductCurrency;
	private Double salesOrderProductQty;
	private String salesOrderProductUom;
	private String installLocation;
	private Boolean internalEngg;
	private Boolean tickForMaintenance;
	private String additionalInformation;
	private String salesOrderDescription;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private Date modifiedAt;
//	private String modifiedAt;
	private String remarks;
	
	private String unitCost; 	
	private BigDecimal productTotal; 

	private Double total;
	private Double discountAmount;
	private Double trade;
	
//	private Double unitCost;
//	private Double generalTotal;
	
	public SalesOrderProductDetail() {
	}

	public SalesOrderProductDetail(long salesOrderProductDetailId) {
		this.salesOrderProductDetailId = salesOrderProductDetailId;
	}

	public SalesOrderProductDetail(long salesOrderProductDetailId,
			Product product, ProductType productType, SalesOrder salesOrder,
			ListValues lvsoChargeType,
			ListValues lvsoLineItem,
			SupplierProduct supplierProduct, SpecificationMap specificationMap,
			ProductSubCategory productSubCategory,
			ProductSubType productSubType, ProductCategory productCategory,
			ListValues listValuesBySalesOrderFromId, String salesOrderName,
			Product profServProduct,
			BigDecimal salesOrderProductRate, BigDecimal salesOrderProductDiscount,
			BigDecimal salesOrderProductCurrency, Double salesOrderProductQty,
			String salesOrderProductUom, String installLocation,
			Boolean internalEngg, Boolean tickForMaintenance, String additionalInformation,
			String salesOrderDescription, Boolean isActive, String createdBy,
			Date createdAt, String modifiedBy, Date modifiedAt, String remarks) {
		this.salesOrderProductDetailId = salesOrderProductDetailId;
		this.product = product;
		this.productType = productType;
		this.salesOrder = salesOrder;
		this.lvsoChargeType = lvsoChargeType;
		this.lvsoLineItem = lvsoLineItem;
		this.supplierProduct = supplierProduct;
		this.specificationMap = specificationMap;
		this.productSubCategory = productSubCategory;
		this.productSubType = productSubType;
		this.productCategory = productCategory;
		this.listValuesBySalesOrderFromId = listValuesBySalesOrderFromId;
		this.salesOrderName = salesOrderName;
		this.profServProduct = profServProduct;
		this.salesOrderProductRate = salesOrderProductRate;
		this.salesOrderProductDiscount = salesOrderProductDiscount;
		this.salesOrderProductCurrency = salesOrderProductCurrency;
		this.salesOrderProductQty = salesOrderProductQty;
		this.salesOrderProductUom = salesOrderProductUom;
		this.installLocation = installLocation;
		this.internalEngg = internalEngg;
		this.tickForMaintenance = tickForMaintenance;
		this.additionalInformation = additionalInformation;
		this.salesOrderDescription = salesOrderDescription;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
	}

	@Id
	@GeneratedValue
	@Column(name = "SalesOrderProductDetailID", unique = true, nullable = false)
	public long getSalesOrderProductDetailId() {
		return this.salesOrderProductDetailId;
	}

	public void setSalesOrderProductDetailId(long salesOrderProductDetailId) {
		this.salesOrderProductDetailId = salesOrderProductDetailId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderProductID")
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderProductTypeID")
	public ProductType getProductType() {
		return this.productType;
	}

	public void setProductType(ProductType productType) {
		this.productType = productType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderID")
	public SalesOrder getSalesOrder() {
		return this.salesOrder;
	}

	public void setSalesOrder(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderChargeType")
	public ListValues getLvsoChargeType() {
		return this.lvsoChargeType;
	}

	public void setLvsoChargeType(
			ListValues lvsoChargeType) {
		this.lvsoChargeType = lvsoChargeType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderLineItem")
	public ListValues getLvsoLineItem() {
		return this.lvsoLineItem;
	}

	public void setLvsoLineItem(
			ListValues lvsoLineItem) {
		this.lvsoLineItem = lvsoLineItem;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SupplierProductID")
	public SupplierProduct getSupplierProduct() {
		return this.supplierProduct;
	}

	public void setSupplierProduct(SupplierProduct supplierProduct) {
		this.supplierProduct = supplierProduct;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderSpecificationID")
	public SpecificationMap getSpecificationMap() {
		return this.specificationMap;
	}

	public void setSpecificationMap(SpecificationMap specificationMap) {
		this.specificationMap = specificationMap;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderProductSubCategoryID")
	public ProductSubCategory getProductSubCategory() {
		return this.productSubCategory;
	}

	public void setProductSubCategory(ProductSubCategory productSubCategory) {
		this.productSubCategory = productSubCategory;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderProductSubTypeID")
	public ProductSubType getProductSubType() {
		return this.productSubType;
	}

	public void setProductSubType(ProductSubType productSubType) {
		this.productSubType = productSubType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderProductCategoryID")
	public ProductCategory getProductCategory() {
		return this.productCategory;
	}

	public void setProductCategory(ProductCategory productCategory) {
		this.productCategory = productCategory;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderFromID")
	public ListValues getListValuesBySalesOrderFromId() {
		return this.listValuesBySalesOrderFromId;
	}

	public void setListValuesBySalesOrderFromId(
			ListValues listValuesBySalesOrderFromId) {
		this.listValuesBySalesOrderFromId = listValuesBySalesOrderFromId;
	}

	@Column(name = "SalesOrderName")
	public String getSalesOrderName() {
		return this.salesOrderName;
	}

	public void setSalesOrderName(String salesOrderName) {
		this.salesOrderName = salesOrderName;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderProfessionalServiceID")
	public Product getProfServProduct() {
		return this.profServProduct;
	}

	public void setProfServProduct(
			Product profServProduct) {
		this.profServProduct = profServProduct;
	}

	@Column(name = "SalesOrderProductRate")
	public BigDecimal getSalesOrderProductRate() {
		return this.salesOrderProductRate;
	}

	public void setSalesOrderProductRate(BigDecimal salesOrderProductRate) {
		this.salesOrderProductRate = salesOrderProductRate;
	}

	@Column(name = "SalesOrderProductDiscount")
	public BigDecimal getSalesOrderProductDiscount() {
		return this.salesOrderProductDiscount;
	}

	public void setSalesOrderProductDiscount(BigDecimal salesOrderProductDiscount) {
		this.salesOrderProductDiscount = salesOrderProductDiscount;
	}

	@Column(name = "SalesOrderProductCurrency", scale = 4)
	public BigDecimal getSalesOrderProductCurrency() {
		return this.salesOrderProductCurrency;
	}

	public void setSalesOrderProductCurrency(
			BigDecimal salesOrderProductCurrency) {
		this.salesOrderProductCurrency = salesOrderProductCurrency;
	}

	@Column(name = "SalesOrderProductQty", precision = 53, scale = 0)
	public Double getSalesOrderProductQty() {
		return this.salesOrderProductQty;
	}

	public void setSalesOrderProductQty(Double salesOrderProductQty) {
		this.salesOrderProductQty = salesOrderProductQty;
	}

	@Column(name = "SalesOrderProductUOM")
	public String getSalesOrderProductUom() {
		return this.salesOrderProductUom;
	}

	public void setSalesOrderProductUom(String salesOrderProductUom) {
		this.salesOrderProductUom = salesOrderProductUom;
	}

	@Column(name = "InstallLocation")
	public String getInstallLocation() {
		return this.installLocation;
	}

	public void setInstallLocation(String installLocation) {
		this.installLocation = installLocation;
	}

	@Column(name = "InternalEngg")
	public Boolean getInternalEngg() {
		return internalEngg;
	}

	public void setInternalEngg(Boolean internalEngg) {
		this.internalEngg = internalEngg;
	}

	@Column(name = "TickForMaintenance")
	public Boolean getTickForMaintenance() {
		return this.tickForMaintenance;
	}

	public void setTickForMaintenance(Boolean tickForMaintenance) {
		this.tickForMaintenance = tickForMaintenance;
	}

	@Column(name = "AdditionalInformation")
	public String getAdditionalInformation() {
		return this.additionalInformation;
	}

	public void setAdditionalInformation(String additionalInformation) {
		this.additionalInformation = additionalInformation;
	}

	@Column(name = "SalesOrderDescription")
	public String getSalesOrderDescription() {
		return this.salesOrderDescription;
	}

	public void setSalesOrderDescription(String salesOrderDescription) {
		this.salesOrderDescription = salesOrderDescription;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

//	@Column(name = "ModifiedAt")
//	public String getModifiedAt() {
//		return this.modifiedAt;
//	}
//
//	public void setModifiedAt(String modifiedAt) {
//		this.modifiedAt = modifiedAt;
//	}

	@Column(name = "ModifiedAt")
	public Date getModifiedAt() {
		return modifiedAt;
	}

	public void setModifiedAt(Date modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	
	@Column(name = "UnitCost")
	public String getUnitCost() {
		return unitCost;
	}
	public void setUnitCost(String unitCost) {
		this.unitCost = unitCost;
	}
	
	@Column(name = "ProductTotal")
	public BigDecimal getProductTotal() {
		return productTotal;
	}
	public void setProductTotal(BigDecimal productTotal) {
		this.productTotal = productTotal;
	}

	@Transient
	public Double getTotal() {
		Double retailPrice = null;
		if(this.supplierProduct != null){
			retailPrice = supplierProduct.getSupplierProductRetailPrice();
		}
		if ((this.salesOrderProductQty != null) && (retailPrice != null)) {
			return retailPrice * salesOrderProductQty;
			// return this.soProdQty * 10;
		}
		else
			return null;
	}
	
	@Transient
	public Double getTotalOrder() {
		if ((this.salesOrderProductQty != null) && (this.salesOrderProductRate != null)) {
			return this.salesOrderProductQty * this.salesOrderProductRate.doubleValue();
		}
		else
			return null;
	}

	@Transient
	public Double getDiscountAmount() {
		Double sum = this.getTotal();
		Double discount = 0d;
		if(this.getSalesOrderProductDiscount() != null){
			discount = this.getSalesOrderProductDiscount().doubleValue();
		}
		if (sum != null) {
			if(discount != null){
				sum = ((sum * discount)/100); 
			}
			return sum;
		}
		else
			return 0.0d;
	}

	public void setDiscountAmount(Double discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Transient
	public Double getTrade() {
		Double sum = this.getTotal();
		Double disAmount = this.getDiscountAmount();
		if((sum != null) && (disAmount != null)){
			sum = sum - disAmount;
		}
		return sum;
	}

	@Transient
	public BigDecimal getProfUnitCost() {
		if(this.salesOrderProductRate != null){
			return salesOrderProductRate;
		} 
		else {
			if(this.profServProduct != null){
				return profServProduct.getRetailRate();
			}
		}
		return null;
	}

	@Transient
	public Double getProfServTotal() {
		if((salesOrderProductQty != null) && (getProfUnitCost() != null))
			return salesOrderProductQty * getProfUnitCost().doubleValue();
		else
			return null;
	}

}
