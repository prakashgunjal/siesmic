package com.seismic.crm.model;

// Generated Oct 8, 2013 8:42:18 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * ProductType generated by hbm2java
 */
@Entity
@Table(name = "ProductType", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class ProductType implements java.io.Serializable {

	private long productTypeId;
	private ProductCategory productCategory;
	private ProductSubCategory productSubCategory;
	private String productType;
	private String productTypeDesc;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private Date modifiedAt;
	private String remarks;
	private Set productSubTypes = new HashSet(0);
//	private Set salesOrderProductDetails = new HashSet(0);
	private Set products = new HashSet(0);

	public ProductType() {
	}

	public ProductType(long productTypeId) {
		this.productTypeId = productTypeId;
	}

	public ProductType(long productTypeId, ProductCategory productCategory,
			ProductSubCategory productSubCategory, String productType,
			String productTypeDesc, Boolean isActive, String createdBy,
			Date createdAt, String modifiedBy, Date modifiedAt, String remarks,
			Set productSubTypes, Set salesOrderProductDetails, Set products) {
		this.productTypeId = productTypeId;
		this.productCategory = productCategory;
		this.productSubCategory = productSubCategory;
		this.productType = productType;
		this.productTypeDesc = productTypeDesc;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
		this.productSubTypes = productSubTypes;
//		this.salesOrderProductDetails = salesOrderProductDetails;
		this.products = products;
	}

	@Id
	@Column(name = "ProductTypeID", unique = true, nullable = false)
	public long getProductTypeId() {
		return this.productTypeId;
	}

	public void setProductTypeId(long productTypeId) {
		this.productTypeId = productTypeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ProductCategoryID")
	public ProductCategory getProductCategory() {
		return this.productCategory;
	}

	public void setProductCategory(ProductCategory productCategory) {
		this.productCategory = productCategory;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ProductSubCategoryID")
	public ProductSubCategory getProductSubCategory() {
		return this.productSubCategory;
	}

	public void setProductSubCategory(ProductSubCategory productSubCategory) {
		this.productSubCategory = productSubCategory;
	}

	@Column(name = "ProductType")
	public String getProductType() {
		return this.productType;
	}

	public void setProductType(String productType) {
		this.productType = productType;
	}

	@Column(name = "ProductTypeDesc")
	public String getProductTypeDesc() {
		return this.productTypeDesc;
	}

	public void setProductTypeDesc(String productTypeDesc) {
		this.productTypeDesc = productTypeDesc;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedAt", length = 23)
	public Date getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(Date modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY/*, mappedBy = "productType"*/)
	public Set<ProductSubType> getProductSubTypes() {
		return this.productSubTypes;
	}

	public void setProductSubTypes(Set productSubTypes) {
		this.productSubTypes = productSubTypes;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "productType")
	public Set getSalesOrderProductDetails() {
		return this.salesOrderProductDetails;
	}

	public void setSalesOrderProductDetails(Set salesOrderProductDetails) {
		this.salesOrderProductDetails = salesOrderProductDetails;
	}*/

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY/*, mappedBy = "productType"*/)
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set products) {
		this.products = products;
	}
	

}
