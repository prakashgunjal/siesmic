package com.seismic.crm.model;

// Generated Dec 24, 2013 10:51:26 AM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Lead generated by hbm2java
 */
@Entity
@Table(name = "Lead", schema = "dbo", catalog = "Seismic_Crm_Dev")
public class Lead implements java.io.Serializable {

	private long leadId;
	private Contact contact;
	private Account account;
	private java.sql.Date leadDate;
	private String leadName;
	private String leadNumber;
	private String leadDescription;
	private String leadState;
	private String leadSalesRep;
	private Contact contactByLeadSalesRepId;
	private Date leadValidFrom;
	private java.sql.Date leadExpiresOn;
	private Date leadCancleOn;
	private String leadBroker;
	private String leadRating;
	private BigDecimal leadCloseProbability;
	private BigDecimal estimatedValue;
	private java.sql.Date estimatedCloseDate;
	private BigDecimal estimatedSalesCommision;
	private Boolean isActive;
	private String createdBy;
	private Date createdAt;
	private String modifiedBy;
	private Date modifiedAt;
	private String remarks;

	private ListValues listValuesByLanguageId;
	private ListValues listValuesByStatusId;	
	private ListValues listValuesBySourceId;
	private ListValues listValuesByPriorityId;
	
	private ListValues listValuesByRatingId;
		
	public Lead() {
	}

	public Lead(long leadId) {
		this.leadId = leadId;
	}

	public Lead(long leadId, Contact contact, Account account, java.sql.Date leadDate,
			String leadName, String leadNumber, String leadDescription,
			String leadState, String leadLangauge, String leadPriority,
			String leadSalesRep, Date leadValidFrom, java.sql.Date leadExpiresOn,
			Date leadCancleOn, String leadBroker, String leadSource,
			String leadRating, BigDecimal leadCloseProbability,
			BigDecimal estimatedValue, java.sql.Date estimatedCloseDate,
			BigDecimal estimatedSalesCommision, Boolean isActive,
			String createdBy, Date createdAt, String modifiedBy,
			Date modifiedAt, String remarks,Contact contactByLeadSalesRepId) {
		this.leadId = leadId;
		this.contact = contact;
		this.account = account;
		this.leadDate = leadDate;
		this.leadName = leadName;
		this.leadNumber = leadNumber;
		this.leadDescription = leadDescription;
		this.leadState = leadState;
	//	this.leadLangauge = leadLangauge;
	//	this.leadPriority = leadPriority;
		this.leadSalesRep = leadSalesRep;
		this.leadValidFrom = leadValidFrom;
		this.leadExpiresOn = leadExpiresOn;
		this.leadCancleOn = leadCancleOn;
		this.leadBroker = leadBroker;
	//	this.leadSource = leadSource;
		this.leadRating = leadRating;
		this.leadCloseProbability = leadCloseProbability;
		this.estimatedValue = estimatedValue;
		this.estimatedCloseDate = estimatedCloseDate;
		this.estimatedSalesCommision = estimatedSalesCommision;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.modifiedBy = modifiedBy;
		this.modifiedAt = modifiedAt;
		this.remarks = remarks;
		this.contactByLeadSalesRepId = contactByLeadSalesRepId;
	}

	@Id
	@GeneratedValue
	@Column(name = "LeadID", unique = true, nullable = false)
	public long getLeadId() {
		return this.leadId;
	}

	public void setLeadId(long leadId) {
		this.leadId = leadId;
	}

	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ContactID")
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "AccountID")
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	
	@Column(name = "LeadDate", length = 23)
	public java.sql.Date getLeadDate() {
		return this.leadDate;
	}
	public void setLeadDate(java.sql.Date leadDate) {
		this.leadDate = leadDate;
	}

	@Column(name = "LeadName")
	public String getLeadName() {
		return this.leadName;
	}

	public void setLeadName(String leadName) {
		this.leadName = leadName;
	}

	@Column(name = "LeadNumber")
	public String getLeadNumber() {
		return this.leadNumber;
	}

	public void setLeadNumber(String leadNumber) {
		this.leadNumber = leadNumber;
	}

	@Column(name = "LeadDescription")
	public String getLeadDescription() {
		return this.leadDescription;
	}

	public void setLeadDescription(String leadDescription) {
		this.leadDescription = leadDescription;
	}

	@Column(name = "LeadState")
	public String getLeadState() {
		return this.leadState;
	}

	public void setLeadState(String leadState) {
		this.leadState = leadState;
	}
    
    
	@Column(name = "LeadSalesRep")
	public String getLeadSalesRep() {
		return this.leadSalesRep;
	}
	public void setLeadSalesRep(String leadSalesRep) {
		this.leadSalesRep = leadSalesRep;
	} 

	
	@Column(name = "LeadValidFrom", length = 23)
	public Date getLeadValidFrom() {
		return this.leadValidFrom;
	}

	public void setLeadValidFrom(Date leadValidFrom) {
		this.leadValidFrom = leadValidFrom;
	}

	
	@Column(name = "LeadExpiresOn", length = 23)
	public java.sql.Date getLeadExpiresOn() {
		return this.leadExpiresOn;
	}
	public void setLeadExpiresOn(java.sql.Date leadExpiresOn) {
		this.leadExpiresOn = leadExpiresOn;
	}

	
	@Column(name = "LeadCancleOn", length = 23)
	public Date getLeadCancleOn() {
		return this.leadCancleOn;
	}

	public void setLeadCancleOn(Date leadCancleOn) {
		this.leadCancleOn = leadCancleOn;
	}

	@Column(name = "LeadBroker")
	public String getLeadBroker() {
		return this.leadBroker;
	}

	public void setLeadBroker(String leadBroker) {
		this.leadBroker = leadBroker;
	}
    

	@Column(name = "LeadRating")
	public String getLeadRating() {
		return this.leadRating;
	}

	public void setLeadRating(String leadRating) {
		this.leadRating = leadRating;
	}

	
	@Column(name = "LeadCloseProbability", length = 23)
	public BigDecimal getLeadCloseProbability() {
		return this.leadCloseProbability;
	}
	public void setLeadCloseProbability(BigDecimal leadCloseProbability) {
		this.leadCloseProbability = leadCloseProbability;
	}

	@Column(name = "EstimatedValue", scale = 4)
	public BigDecimal getEstimatedValue() {
		return this.estimatedValue;
	}

	public void setEstimatedValue(BigDecimal estimatedValue) {
		this.estimatedValue = estimatedValue;
	}

	
	@Column(name = "EstimatedCloseDate", length = 23)
	public java.sql.Date getEstimatedCloseDate() {
		return this.estimatedCloseDate;
	}
	public void setEstimatedCloseDate(java.sql.Date estimatedCloseDate) {
		this.estimatedCloseDate = estimatedCloseDate;
	}

	@Column(name = "EstimatedSalesCommision", scale = 4)
	public BigDecimal getEstimatedSalesCommision() {
		return this.estimatedSalesCommision;
	}

	public void setEstimatedSalesCommision(BigDecimal estimatedSalesCommision) {
		this.estimatedSalesCommision = estimatedSalesCommision;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedAt", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "ModifiedBy")
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedAt", length = 23)
	public Date getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(Date modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "LeadLanguageID")
	public ListValues getListValuesByLanguageId() {
		return listValuesByLanguageId;
	}

	public void setListValuesByLanguageId(ListValues listValuesByLanguageId) {
		this.listValuesByLanguageId = listValuesByLanguageId;
	}
	
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "LeadStatusID")
	public ListValues getListValuesByStatusId() {
		return listValuesByStatusId;
	}

	public void setListValuesByStatusId(ListValues listValuesByStatusId) {
		this.listValuesByStatusId = listValuesByStatusId;
	}
	
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "LeadSourceID")
	public ListValues getListValuesBySourceId() {
		return listValuesBySourceId;
	}

	public void setListValuesBySourceId(ListValues listValuesBySourceId) {
		this.listValuesBySourceId = listValuesBySourceId;
	}
	
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "LeadPriorityID")
	public ListValues getListValuesByPriorityId() {
		return listValuesByPriorityId;
	}

	public void setListValuesByPriorityId(ListValues listValuesByPriorityId) {
		this.listValuesByPriorityId = listValuesByPriorityId;
	}
    
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "LeadRatingID")
	public ListValues getListValuesByRatingId() {
		return listValuesByRatingId;
	}
	public void setListValuesByRatingId(ListValues listValuesByRatingId) {
		this.listValuesByRatingId = listValuesByRatingId;
	}
	@JsonManagedReference
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "LeadSalesRepID")
	public Contact getContactByLeadSalesRepId() {
		return this.contactByLeadSalesRepId;
	}

	public void setContactByLeadSalesRepId(Contact contactByLeadSalesRepId) {
		this.contactByLeadSalesRepId = contactByLeadSalesRepId;
	}
	
}
