package com.seismic.crm.model;

// Generated Jan 3, 2014 9:30:19 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;


/**
 * SoSpecQuestionResponse generated by hbm2java
 */
@Entity
@Table(name = "SoSpecQuestionResponse", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class SoSpecQuestionResponse implements java.io.Serializable {

	private long questionResponseId;
	private SalesOrder salesOrder;
	private Product product;
	private SoSpecQuestion soSpecQuestion;
	private Boolean specificationResponse;
	private String remarks;
	private Set<SoSpecTaskResponse> soSpecTaskResponses = new LinkedHashSet(0);

	public SoSpecQuestionResponse() {
	}

	public SoSpecQuestionResponse(long questionResponseId) {
		this.questionResponseId = questionResponseId;
	}

	public SoSpecQuestionResponse(long questionResponseId,
			SalesOrder salesOrder, Product product,
			SoSpecQuestion soSpecQuestion, Boolean specificationResponse,
			String remarks, Set soSpecTaskResponses) {
		this.questionResponseId = questionResponseId;
		this.salesOrder = salesOrder;
		this.product = product;
		this.soSpecQuestion = soSpecQuestion;
		this.specificationResponse = specificationResponse;
		this.remarks = remarks;
		this.soSpecTaskResponses = soSpecTaskResponses;
	}

	@Id
	@GeneratedValue
	@Column(name = "QuestionResponseID", unique = true, nullable = false)
	public long getQuestionResponseId() {
		return this.questionResponseId;
	}

	public void setQuestionResponseId(long questionResponseId) {
		this.questionResponseId = questionResponseId;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SalesOrderID")
	public SalesOrder getSalesOrder() {
		return this.salesOrder;
	}

	public void setSalesOrder(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProductID")
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QuestionID")
	public SoSpecQuestion getSoSpecQuestion() {
		return this.soSpecQuestion;
	}

	public void setSoSpecQuestion(SoSpecQuestion soSpecQuestion) {
		this.soSpecQuestion = soSpecQuestion;
	}

	@Column(name = "SpecificationResponse")
	public Boolean getSpecificationResponse() {
		return this.specificationResponse;
	}

	public void setSpecificationResponse(Boolean specificationResponse) {
		this.specificationResponse = specificationResponse;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@JsonManagedReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "soSpecQuestionResponse")
	public Set<SoSpecTaskResponse> getSoSpecTaskResponses() {
		return this.soSpecTaskResponses;
	}

	public void setSoSpecTaskResponses(Set<SoSpecTaskResponse> soSpecTaskResponses) {
		this.soSpecTaskResponses = soSpecTaskResponses;
	}

	@Override
	public String toString() {
		return remarks;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ (int) (questionResponseId ^ (questionResponseId >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof SoSpecQuestionResponse))
			return false;
		SoSpecQuestionResponse other = (SoSpecQuestionResponse) obj;
		if (questionResponseId != other.questionResponseId)
			return false;
		return true;
	}

}
