package com.seismic.crm.model;

// Generated Oct 6, 2013 10:30:05 PM by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * SalesOrderSpecfication generated by hbm2java
 */
@Entity
@Table(name = "SalesOrderSpecResponse", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class SalesOrderSpecResponse implements java.io.Serializable {

	private long soSpecId;
	private SalesOrder salesOrder;
	private Product product;
	private Question question;
	private String taskIds;
	private String taskNames;
	private Boolean specificationResponse;
	private String remarks;
	private List<TaskResponseMap> taskResponseMaps = new ArrayList<TaskResponseMap>();

	public SalesOrderSpecResponse() {
	}

	public SalesOrderSpecResponse(long soSpecId) {
		this.soSpecId = soSpecId;
	}

//	public SalesOrderSpecification(long soSpecId, SalesOrder salesOrder,
//			Product product, SpecificationMap specificationMap,
//			Boolean specificationResponse, String remarks) {
//		this.soSpecId = soSpecId;
//		this.salesOrder = salesOrder;
//		this.product = product;
//		this.specificationMap = specificationMap;
//		this.specificationResponse = specificationResponse;
//		this.remarks = remarks;
//	}

	@Id
	@GeneratedValue
	@Column(name = "SalesOrderSpecID", unique = true, nullable = false)
	public long getSoSpecId() {
		return this.soSpecId;
	}

	public void setSoSpecId(long soSpecId) {
		this.soSpecId = soSpecId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SalesOrderID")
	public SalesOrder getSalesOrder() {
		return this.salesOrder;
	}

	public void setSalesOrder(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ProductID")
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "QuestionID")
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@Column(name = "SpecificationResponse")
	public Boolean getSpecificationResponse() {
		return this.specificationResponse;
	}

	public void setSpecificationResponse(Boolean specificationResponse) {
		this.specificationResponse = specificationResponse;
	}

	@Column(name = "Remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Transient
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesOrderSpecResponse")
	public List<TaskResponseMap> getTaskResponseMaps() {
		return this.taskResponseMaps;
	}

	public void setTaskResponseMaps(List<TaskResponseMap> taskResponseMaps) {
		this.taskResponseMaps = taskResponseMaps;
	}

	@Transient
	public String getTaskIds() {
		List<Long> arrTaskIds = new ArrayList<Long>();
		for(TaskResponseMap item:taskResponseMaps){
			arrTaskIds.add(item.getTask().getTaskId());
		}
		return arrTaskIds.toString();
	}

	public void setTaskIds(String taskIds) {
		this.taskIds = taskIds;
	}

	@Transient
	public String getTaskNames() {
		String names = "";
		for(TaskResponseMap item:taskResponseMaps){
			names = names + "&#8226; " + item.getTask().getTaskName() + "<br><br>";
		}
		return names;
	}

	public void setTaskNames(String taskNames) {
		this.taskNames = taskNames;
	}

}
