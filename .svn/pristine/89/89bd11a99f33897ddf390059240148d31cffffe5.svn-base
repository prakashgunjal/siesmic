package com.seismic.crm.model;

// Generated Jan 3, 2014 9:30:19 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * SoSpecTaskResponse generated by hbm2java
 */
@Entity
@Table(name = "SoSpecTaskResponse", schema = "dbo", catalog = "SEISMIC_CRM_DEV")
public class SoSpecTaskResponse implements java.io.Serializable {

	private long taskResponseId;
	private SoSpecTask soSpecTask;
	private SoSpecQuestionResponse soSpecQuestionResponse;
	private Boolean selectedFlag;
	private Set<SfSpecActivityResponse> sfSpecActivityResponses = new LinkedHashSet(0);

	public SoSpecTaskResponse() {
	}

	public SoSpecTaskResponse(long taskResponseId) {
		this.taskResponseId = taskResponseId;
	}

	public SoSpecTaskResponse(long taskResponseId, SoSpecTask soSpecTask,
			SoSpecQuestionResponse soSpecQuestionResponse) {
		this.taskResponseId = taskResponseId;
		this.soSpecTask = soSpecTask;
		this.soSpecQuestionResponse = soSpecQuestionResponse;
	}

	@Id
	@GeneratedValue
	@Column(name = "TaskResponseID", unique = true, nullable = false)
	public long getTaskResponseId() {
		return this.taskResponseId;
	}

	public void setTaskResponseId(long taskResponseId) {
		this.taskResponseId = taskResponseId;
	}

//	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TaskID")
	public SoSpecTask getSoSpecTask() {
		return this.soSpecTask;
	}

	public void setSoSpecTask(SoSpecTask soSpecTask) {
		this.soSpecTask = soSpecTask;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QuestionResponseID")
	public SoSpecQuestionResponse getSoSpecQuestionResponse() {
		return this.soSpecQuestionResponse;
	}

	public void setSoSpecQuestionResponse(
			SoSpecQuestionResponse soSpecQuestionResponse) {
		this.soSpecQuestionResponse = soSpecQuestionResponse;
	}

	@Column(name = "SelectedFlag")
	public Boolean getSelectedFlag() {
		return this.selectedFlag;
	}

	public void setSelectedFlag(Boolean selectedFlag) {
		this.selectedFlag = selectedFlag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "soSpecTaskResponse", 
			cascade = CascadeType.REMOVE, orphanRemoval=true)
	public Set<SfSpecActivityResponse> getSfSpecActivityResponses() {
		return this.sfSpecActivityResponses;
	}

	public void setSfSpecActivityResponses(Set<SfSpecActivityResponse> sfSpecActivityResponses) {
		this.sfSpecActivityResponses = sfSpecActivityResponses;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ (int) (taskResponseId ^ (taskResponseId >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof SoSpecTaskResponse))
			return false;
		SoSpecTaskResponse other = (SoSpecTaskResponse) obj;
		if (taskResponseId != other.taskResponseId)
			return false;
		return true;
	}

}
