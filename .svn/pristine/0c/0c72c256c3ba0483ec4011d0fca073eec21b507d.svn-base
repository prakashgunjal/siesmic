<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
        <mvc:message-converters>
            <!-- Use the HibernateAware mapper instead of the default -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.seismic.crm.utils.HibernateAwareObjectMapper" />
                </property>
            </bean>
        </mvc:message-converters>
         <mvc:argument-resolvers>
          <bean class="org.springframework.data.web.PageableArgumentResolver" />
      </mvc:argument-resolvers>
	</mvc:annotation-driven>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/**" location="/" />
	<!-- <mvc:resources mapping="/fonts/**" location="/resources/fonts/" />
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/images/**" location="/resources/images/" />
	<mvc:resources mapping="/img/**" location="/resources/img/" />
	<mvc:resources mapping="/gridjs/**" location="/resources/gridjs/" />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<mvc:resources mapping="/jqgrid/**" location="/resources/jqgrid/" />
	<mvc:resources mapping="/jqwidgets/**" location="/resources/jqwidgets/" />
	<mvc:resources mapping="/scripts/**" location="/resources/scripts/" />
	<mvc:resources mapping="/menujs/**" location="/resources/menujs/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/pages/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
	
	<context:component-scan base-package="com.seismic.crm" />
	
	<!-- <beans:import resource="classpath:repository-context.xml" /> -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.seismic.crm.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- <property name="generateDdl" value="true" /> -->
				<!-- <property name="database" value="HSQL" /> -->
			</bean>
		</property>
		<property name="persistenceUnitName" value="jpa.seismic" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
<!-- Factory bean that creates the Mongo instance -->

	<!-- <bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
		<property name="host" value="192.168.1.113" />
		<property name="port" value="27017" />
	</bean>
	
	MongoTemplate for connecting and quering the documents in the database
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"> 
		<constructor-arg name="mongo" ref="mongo" />
		<constructor-arg name="databaseName" value="SeismicDocDb" />
	</bean>
	
	Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->
		
	<!-- Configure the multipart resolver -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize" value="100000000"/>
</bean>
	
	
	
<!-- Factory bean that end of Mongo instance -->
	
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	  <property name="url" value="jdbc:sqlserver://127.0.0.1:1433;databaseName=SEISMIC_CRM_DEV" />
	  <property name="username" value="sa" />
	  <property name="password" value="AsPlblr1" />
	</bean> -->
	
	<jpa:repositories base-package="com.seismic.crm.repository" />

	<!-- Simple strategy: only path extension is taken into account -->
	<!-- <bean id="cnManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="xls" value="application/vnd.ms-excel" />
			</map>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager" />

	</bean> -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	  <property name="order" value="1" />
	  <property name="mediaTypes">
		<map>
			<entry key="html" value="text/html" />
		   <entry key="json" value="application/json" />
		   <!-- <entry key="xml" value="application/xml" />
		   <entry key="rss" value="application/rss+xml" /> -->
		</map>
	  </property>
 
	  <property name="defaultViews">
		<list>
		  <!-- JSON View -->
		  <!-- <bean
			class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		  </bean> -->
 
		  <!-- RSS View
		  <bean class="com.mkyong.common.rss.RssFeedView" />
 
		  JAXB XML View
		  <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
			<constructor-arg>
				<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				   <property name="classesToBeBound">
					<list>
					   <value>com.mkyong.common.model.Fruit</value>
					</list>
				   </property>
				</bean>
			</constructor-arg>
		  </bean> -->
		 </list>
	  </property>
	  <property name="ignoreAcceptHeader" value="true" />
 
	</bean>
 
	<!-- If no extension matched, use JSP view -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="order" value="2" /> -->
		<!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
</beans>
